var search_data = {"index":{"searchIndex":["attribool","version","bool_accessor()","bool_reader()","bool_writer()","to_a()","to_h()","to_s()","readme"],"longSearchIndex":["attribool","attribool::version","attribool#bool_accessor()","attribool#bool_reader()","attribool#bool_writer()","attribool::version::to_a()","attribool::version::to_h()","attribool::version::to_s()",""],"info":[["Attribool","","Attribool.html","","<p>Adds macros and methods for dealing with boolean attributes.\n"],["Attribool::Version","","Attribool/Version.html","","<p>Module that contains all gem version information. Follows semantic versioning. Read: semver.org/\n"],["bool_accessor","Attribool","Attribool.html#method-i-bool_accessor","(attribute)","<p>Creates a simple reader and writer for booleans. This should only be used when the attribute should only …\n"],["bool_reader","Attribool","Attribool.html#method-i-bool_reader","( attribute, allow_nil: true, condition: nil, prefix: nil, method: nil )","<p>Creates a method that returns a boolean for attributes that may or may not be booleans themselves.\n<p>@param …\n"],["bool_writer","Attribool","Attribool.html#method-i-bool_writer","(attribute, strict: false)","<p>Creates a writer for boolean attributes. Always coerces to boolean based on truthiness.\n<p>@param [Symbol, …\n"],["to_a","Attribool::Version","Attribool/Version.html#method-c-to_a","()","<p>Version as +[MAJOR, MINOR, PATCH]+\n<p>@return [Array]\n"],["to_h","Attribool::Version","Attribool/Version.html#method-c-to_h","()","<p>Version as +{major: MAJOR, minor: MINOR, patch: PATCH}+\n<p>@return [Hash]\n"],["to_s","Attribool::Version","Attribool/Version.html#method-c-to_s","()","<p>Version as <code>MAJOR.MINOR.PATCH</code>\n<p>@return [String]\n"],["README","","README_md.html","","<p>Attribool\n<p><img src=\"https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fevanthegrayt%2Fattribool%2Fbadge%3Fref%3Dmaster&style=flat\"> …\n"]]}}